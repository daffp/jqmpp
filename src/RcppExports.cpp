// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// normal_kernel_3d_indicator_vectorcpp
Rcpp::NumericVector normal_kernel_3d_indicator_vectorcpp(int N, Rcpp::NumericVector x, Rcpp::NumericVector y, Rcpp::NumericVector z, double sd);
RcppExport SEXP _jqmpp_normal_kernel_3d_indicator_vectorcpp(SEXP NSEXP, SEXP xSEXP, SEXP ySEXP, SEXP zSEXP, SEXP sdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< double >::type sd(sdSEXP);
    rcpp_result_gen = Rcpp::wrap(normal_kernel_3d_indicator_vectorcpp(N, x, y, z, sd));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_jqmpp_normal_kernel_3d_indicator_vectorcpp", (DL_FUNC) &_jqmpp_normal_kernel_3d_indicator_vectorcpp, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_jqmpp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
